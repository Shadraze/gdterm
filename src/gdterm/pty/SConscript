Import('env')

checkenv = Environment()
conf = Configure(checkenv)
if conf.CheckFunc('mbstowcs_s'):
	env.Append(CPPDEFINES = "USE_WCRTOMB_S")
conf.Finish()

ptyenv = env.Clone()

cpppath = [ ".", "thirdparty" ]
sources = Glob("thirdparty/libtmt/*.c")
sources.extend(Glob("*.cpp"))
if env["platform"] == "windows":
	sources.extend(Glob("platform/windows/*.cpp"))
	cpppath.extend([ "platform/windows" ])
	ptyenv.Append(CCFLAGS="-DUNICODE")
else:
	env.Append(CPPDEFINES = "USE_PRIMARY_CLIPBOARD")
	sources.extend(Glob("platform/linux/*.cpp"))
	cpppath.extend([ "platform/linux" ])

ptyenv.Append(CPPPATH=cpppath)
ptylib = ptyenv.StaticLibrary("libpty{}{}".format(env["suffix"], env["LIBSUFFIX"]), source=sources)

Return("ptylib")
